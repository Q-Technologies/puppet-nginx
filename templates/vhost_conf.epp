#
# File Managed by Puppet
#
<% if $config['to_ssl'] { -%>
# NGINX Redirection to SSL
server {
  listen 80;
  server_name <%= $domain %> <%= join(any2array($config['alternates']), " ") %>;
  location / {
    return 302 https://<%= $domain %>$request_uri;
  }
  location /.well-known {
    root /<%= $web_root_parent %>/<%= $domain %>/;
  }
}
<% } -%>

<% if !$config['to_ssl'] and $config['alternates'] { -%>
# NGINX Redirection to main domain
server {
  listen 80;
  server_name <%= join(any2array($config['alternates']), " ") %>;
  location / {
    return 302 https://<%= $domain %>$request_uri;
  }
  location /.well-known {
    root /<%= $web_root_parent %>/<%= $domain %>/;
  }
}
<% } -%>

<% if $config['content'] { -%>
<%      if $config['content'] == 'psgi' { -%>
# NGINX - Serving content as PSGI (Perl Dancer)
<%      } elsif $config['content'] == 'php' { -%>
# NGINX - Serving content as PHP using PHP-FPM
<%      } elsif $config['content'] == 'owncloud' { -%>
# NGINX - Serving content as PHP Owncloud using PHP-FPM
<%      } elsif $config['content'] == 'opencart' { -%>
# NGINX - Serving content as PHP OpenCart Web Application using PHP-FPM
<%      } -%>
server {
<%      if $config['to_ssl'] { -%>
  listen       443;
<%      } else { -%>
  listen       80;
  location /.well-known {
    root /<%= $web_root_parent %>/<%= $domain %>/;
  }
}
<%      } -%>
  server_name <%= $domain %>;

  access_log /var/log/nginx/<%= $domain %>-access_log;
  error_log  /var/log/nginx/<%= $domain %>-error_log;

<%      if $config['to_ssl'] { -%>
    ssl                  on;
<%          if $config['letsencrypt'] { -%>
    ssl_certificate      /etc/letsencrypt/live/<%= $domain %>/cert.pem;
    ssl_certificate_key  /etc/letsencrypt/live/<%= $domain %>/privkey.pem;
<%          } else { -%>
    ssl_certificate      /etc/nginx/certs/<%= $domain %>.crt;
    ssl_certificate_key  /etc/nginx/certs/<%= $domain %>.key;
<%          } -%>
    ssl_session_timeout  5m;
    ssl_protocols  SSLv2 SSLv3 TLSv1;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;
<%      } -%>

<%      if $config['content'] == 'psgi' { -%>
<%# ################################ -%>
<%# ################################ -%>
<%# ######                    ###### -%>
<%# ###### PSGI (Perl Dancer) ###### -%>
<%# ######                    ###### -%>
<%# ################################ -%>
<%# ################################ -%>
    root /<%= $web_root_parent %>/<%= $domain %>/public;
    location / {
        try_files $uri @proxy;
        access_log off;
        expires max;
    }

    location @proxy {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass       http://unix:/var/sockets/<%= $domain %>.sock;
    }

<%      } elsif $config['content'] == 'php' { -%>
<%# ######################### -%>
<%# ######################### -%>
<%# ######             ###### -%>
<%# ###### Generic PHP ###### -%>
<%# ######             ###### -%>
<%# ######################### -%>
<%# ######################### -%>
    index index.php index.html index.htm;
    root /<%= $web_root_parent %>/<%= $domain %>;
    location / {
        try_files $uri $uri/ /index.php;
    }

    # pass the PHP scripts to FastCGI server listening on unix socket
    location ~ \.php$ {
        fastcgi_pass   unix:/var/sockets/php_fpm.sock;
        fastcgi_index  index.php;
<%          if $config['to_ssl'] { -%>
        fastcgi_param HTTPS on;
<%          } -%>
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

<%      } elsif $config['content'] == 'owncloud' { -%>
<%# ###################### -%>
<%# ###################### -%>
<%# ######          ###### -%>
<%# ###### Owncloud ###### -%>
<%# ######          ###### -%>
<%# ###################### -%>
<%# ###################### -%>

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    client_max_body_size 10G; # set max upload size
    fastcgi_buffers 64 4K;

    rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;

    root /<%= $web_root_parent %>/<%= $domain %>;
    index index.php;
    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/(data|config|\.ht|db_structure\.xml|README) {
            deny all;
    }

    location / {
        # The following 2 rules are only needed with webfinger
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

        try_files $uri $uri/ index.php;
    }

    location ~ ^(.+?\.php)(/.*)?$ {
        try_files $1 = 404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$1;
        fastcgi_param PATH_INFO $2;
<%          if $config['to_ssl'] { -%>
        fastcgi_param HTTPS on;
<%          } -%>
        fastcgi_pass   unix:/var/sockets/php_fpm.sock;
    }

    # Optional: set long EXPIRES header on static assets
    location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
    }
<%      } elsif $config['content'] == 'opencart' { -%>
<%# ###################### -%>
<%# ###################### -%>
<%# ######          ###### -%>
<%# ###### OpenCart ###### -%>
<%# ######          ###### -%>
<%# ###################### -%>
<%# ###################### -%>
    root /<%= $web_root_parent %>/<%= $domain %>;
    index index.php index.html index.htm;


    # Add trailing slash to */admin requests.
    rewrite /admin$ $scheme://$host$uri/ permanent;

    location / {
        # This try_files directive is used to enable SEO-friendly URLs
        # for OpenCart.
        try_files $uri @opencart;
    }

    location @opencart {
        rewrite ^/(.+)$ /index.php?_route_=$1 last;
    }

    location /admin {
        index index.php;
    }

    # Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
    location ~* \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
        deny all;
    }

    # Do not log access to the favicon, to keep the logs cleaner
    location = /favicon.ico {
        log_not_found off;
      access_log off;
    }

    location = /apple-touch-icon.png {
        log_not_found off;
        access_log off;
    }

    location = /apple-touch-icon-precomposed.png {
        log_not_found off;
        access_log off;
    }

    # This block will catch static file requests, such as images, css, js
    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
    # the pattern to be captured into $1 which should help improve performance
    location ~* \.(?:3gp|gif|jpg|jpe?g|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|html|htm|txt|js|css|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|woff)$ {
        # Some basic cache-control for static files to be sent to the browser
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    location ~ ~$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Deny access to any files with a .php extension in these directories
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  
    location /<%= $web_root_parent %>/<%= $domain %>/system/cache/ {
        location ~ .*\.(php\d*|cgi|pl|phtml)?$ {
            deny all;
        }
    }

    location /<%= $web_root_parent %>/<%= $domain %>/system/logs/ {
        location ~ .*\.(php\d*|cgi|pl|phtml)?$ {
            deny all;
        }
    }

    location /<%= $web_root_parent %>/<%= $domain %>/image/ {
        location ~ .*\.(php\d*|cgi|pl|phtml)?$ {
            deny all;
        }
    }

    location /<%= $web_root_parent %>/<%= $domain %>/image/cache/ {
        location ~ .*\.(php\d*|cgi|pl|phtml)?$ {
            deny all;
        }
    }

    location /<%= $web_root_parent %>/<%= $domain %>/download/ {
        location ~ .*\.(php\d*|cgi|pl|phtml)?$ {
            deny all;
        }
    }

    # Make sure these get through
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    rewrite ^/sitemap.xml$ /index.php?route=feed/google_sitemap last;
    rewrite ^/googlebase.xml$ /index.php?route=feed/google_base last;
    rewrite ^/download/(.*) /index.php?route=error/not_found last;
  
    # Fix for Firefox issue with cross site font icons
    location ~* \.(eot|otf|ttf|woff)$ {
        add_header Access-Control-Allow-Origin *;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        #fastcgi_pass   127.0.0.1:9000;
        fastcgi_pass unix:/var/sockets/php_fpm.sock;
        fastcgi_index index.php;
<%          if $config['to_ssl'] { -%>
        fastcgi_param HTTPS on;
<%          } -%>
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        #fastcgi_param PHP_VALUE "sendmail_from=chroot@prout.com \n precision=42";
        fastcgi_param PHP_VALUE "cgi.fix_pathinfo = 0";
        include fastcgi_params;
    }

<%      } -%>


}
<% } -%>



